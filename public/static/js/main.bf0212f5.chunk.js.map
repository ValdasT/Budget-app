{"version":3,"sources":["components/Spinner/Spinner.js","context/auth-context.js","context/modal-context.js","components/SignUp/SignUp.js","components/SignIn/SignIn.js","components/Modal/Modal.js","pages/Auth.js","components/Bookings/BookingList/BookingList.js","components/Bookings/BookingsChart/BookingsChart.js","components/Bookings/BookingsControls/BookingsControls.js","pages/Bookings.js","components/Backdrop/Backdrop.js","components/Events/EventList/EventItem/EventItem.js","components/Events/EventList/EventList.js","pages/Events.js","context/test-context.js","components/OneTest/OneTest.js","pages/Test.js","reducers/expenses.js","context/expenses-context.js","components/Expenses/ExpensesList/Expense/Expense.js","components/Expenses/ExpensesList/ExpensesList.js","components/Expenses/AddExpense/AddExpense.js","pages/Expenses.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["spinner","react_default","a","createElement","className","React","createContext","token","userId","login","tokenExpiration","logout","modalContext","SignUp","_useContext","useContext","AuthContext","submitHandler","switchModeHandler","formik_esm","initialValues","firstName","lastName","email","password","confirmPassword","validationSchema","Yup","shape","required","min","oneOf","onSubmit","fields","render","_ref","errors","touched","status","id","htmlFor","placeholder","name","type","component","onClick","SignIn","InfoModal","ModalContext","modalHeader","modalText","showModal","setShowModal","handleClose","react","Modal","aria-labelledby","centered","show","onHide","Header","closeButton","Title","Body","Footer","Button","variant","AuthPage","_useState","useState","_useState2","Object","slicedToArray","isLogin","setisLogin","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","_useState7","_useState8","setModalHeader","_useState9","_useState10","setModalText","modalInfo","header","text","Provider","value","auth_context","values","query","variables","surname","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","ok","statusText","json","data","catch","err","components_Modal_Modal","Spinner_Spinner","components_SignUp_SignUp","components_SignIn_SignIn","bookingList","props","bookings","map","booking","key","_id","event","title","Date","createdAt","toLocaleDateString","onDelete","bind","BOOKINGS_BUCKETS","Cheap","max","Normal","Expensive","bookingsChart","chartData","labels","datasets","_loop","bucket","filteredBookingsCount","reduce","prev","current","price","push","fillColor","strokeColor","highlightFill","highlightStroke","toConsumableArray","length","style","textAlign","react_chartjs","bookingsControl","activeOutputType","onChange","BookingsPage","state","outputType","fetchBookings","_this","setState","Authorization","context","Error","resData","console","log","deleteBookingHandler","bookingId","requestBody","prevState","filter","changeOutputTypeHandler","this","content","Fragment","BookingsControls_BookingsControls","BookingList_BookingList","BookingsChart","Component","contextType","backdrop","eventItem","eventId","date","creatorId","onDetail","eventList","events","EventItem_EventItem","authUserId","creator","onViewDetail","EventsPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","creating","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleElRef","priceElRef","dateElRef","description","descriptionElRef","trim","desc","updatedEvents","createEvent","modalCancelHandler","showDetailHandler","find","e","bookEventHandler","createRef","fetchEvents","_this2","Backdrop_Backdrop","canCancel","canConfirm","onCancel","onConfirm","confirmText","ref","rows","EventList_EventList","TestContext","OneTest","count","fruit","dataFromDb","setName","lenght","Example","myQuery","gql","Test_templateObject","setshow","setCount","setFruit","setdataFromDb","fruitPicker","frutList","Math","floor","random","useEffect","document","concat","OneTest_OneTest","react_apollo_esm","loading","allFiles","disabled","expensesReducer","action","expenses","expense","expensesContext","Expense","dispatch","ExpensesContext","Expenselist","Expense_Expense_Expense","AddExpenseForm","setTitle","setBody","startAdd","setStartAdd","cancelButton","preventDefault","target","Expenses","_useReducer","useReducer","_useReducer2","parse","localStorage","getItem","setItem","AddExpense_AddExpenseForm","ExpensesList_Expenselist","mainNavigation","Consumer","NavLink","to","client","ApolloClient","uri","App","BrowserRouter","Navigation_MainNavigation","Switch","Route","path","TestPage","Redirect","from","exact","ReactDOM","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.bf0212f5.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"lds-dual-ring\" />\n  </div>\n);\n\nexport default spinner;\n","import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    userId: null,\n    login: (token, userId, tokenExpiration) => {},\n    logout: () => {}\n});","import React from 'react';\nconst modalContext = React.createContext();\nexport { modalContext as default };","\nimport React, { useContext } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport AuthContext from '../../context/auth-context';\n\nconst SignUp = () => {\n\n    const { submitHandler, switchModeHandler } = useContext(AuthContext);\n    \n    return (\n        <Formik\n            initialValues={{\n                firstName: '',\n                lastName: '',\n                email: '',\n                password: '',\n                confirmPassword: ''\n            }}\n            validationSchema={Yup.object().shape({\n                firstName: Yup.string()\n                    .required('First Name is required'),\n                lastName: Yup.string()\n                    .required('Last Name is required'),\n                email: Yup.string()\n                    .email('Email is invalid')\n                    .required('Email is required'),\n                password: Yup.string()\n                    .min(6, 'Password must be at least 6 characters')\n                    .required('Password is required'),\n                confirmPassword: Yup.string()\n                    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n                    .required('Confirm Password is required')\n            })}\n            onSubmit={fields => {\n                submitHandler(fields);\n            }}\n            render={({ errors, status, touched }) => (\n                <Form className=\"auth-form\" id=\"formContentSignUp\">\n                    <div className=\"p-2\">\n                        <h4>Create account</h4>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-form-label\" htmlFor=\"firstName\">First Name</label>\n                        <div className=\"col-sm-8 col-form-label\">\n                            <Field placeholder=\"Firs name\" name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-form-label\" htmlFor=\"lastName\">Last Name</label>\n                        <div className=\"col-sm-8\">\n                            <Field placeholder=\"Last name\" name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-form-label\" htmlFor=\"email\">Email</label>\n                        <div className=\"col-sm-8\">\n                            <Field placeholder=\"Email\" name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-form-label\" htmlFor=\"password\">Password</label>\n                        <div className=\"col-sm-8\">\n                            <Field placeholder=\"Password\" name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-form-label\" htmlFor=\"confirmPassword\">Confirm Password</label>\n                        <div className=\"col-sm-8\">\n                            <Field placeholder=\"Confirm\" name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary mr-2\">Register</button>\n                        <button onClick={switchModeHandler} type=\"button\" className=\"btn btn-secondary mr-2\">Sign in</button>\n                        {/* <button type=\"reset\" className=\"btn btn-secondary\">Reset</button> */}\n                    </div>\n                </Form>\n            )}\n        />\n    );\n};\n\nexport default SignUp;","\nimport React, { useContext } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport AuthContext from '../../context/auth-context';\n\nconst SignIn = () => {\n\n    const { submitHandler, switchModeHandler } = useContext(AuthContext);\n\n    return (\n        <Formik\n            initialValues={{\n                email: '',\n                password: '',\n            }}\n            validationSchema={Yup.object().shape({\n                email: Yup.string()\n                    .email('Email is invalid')\n                    .required('Email is required'),\n                password: Yup.string()\n                    .required('Password is required'),\n            })}\n            onSubmit={fields => {\n                submitHandler(fields);\n            }}\n            render={({ errors, status, touched }) => (\n                <Form className=\"auth-form\" id=\"formContentSignIn\">\n                    <div className=\"p-2\">\n                        <h4>Sign in</h4>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-3 col-form-label\" htmlFor=\"email\">Email</label>\n                        <div className=\"col-sm-9\">\n                            <Field placeholder=\"Email\" name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-3 col-form-label\" htmlFor=\"password\">Password</label>\n                        <div className=\"col-sm-9\">\n                            <Field placeholder=\"Password\" name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                        </div>\n                    </div>\n                    <div className=\"form-actions\">\n                        <button type=\"submit\" className=\"btn btn-primary mr-2\">Submit</button>\n                        <button onClick={switchModeHandler} type=\"button\" className=\"btn btn-secondary mr-2\">Sign up</button>\n\n                    </div>\n                </Form>\n            )}\n        />\n    );\n};\n\nexport default SignIn;","import React, { useContext, useState, Fragment } from 'react';\nimport ModalContext from '../../context/modal-context';\nimport { Modal, Button } from 'react-bootstrap';\n\nimport './Modal.css';\n\nconst InfoModal = () => {\n    const { modalHeader, modalText, showModal, setShowModal } = useContext(ModalContext);\n    const handleClose = () => setShowModal(false);\n\n    return (\n        <Fragment>\n            <Modal\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered show={showModal} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{modalHeader}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{modalText}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Ok\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </Fragment>\n    );\n};\n\nexport default InfoModal;","import React, { useState, Fragment, useContext } from 'react';\nimport './Auth.css';\n\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport ModalContext from '../context/modal-context';\nimport SignUp from '../components/SignUp/SignUp';\nimport SignIn from '../components/SignIn/SignIn';\n\nimport InfoModal from '../components/Modal/Modal';\n\n\nconst AuthPage = () => {\n    let [isLogin, setisLogin] = useState(false);\n    let [isLoading, setIsLoading] = useState(false);\n    let [showModal, setShowModal] = useState(false);\n    let [modalHeader, setModalHeader] = useState('');\n    let [modalText, setModalText] = useState();\n\n    const modalInfo = (show, header, text) => {\n        setShowModal(show);\n        setModalHeader(header);\n        setModalText(text);\n    };\n\n    const { login } = useContext(AuthContext);\n\n    const switchModeHandler = () => {\n        return setisLogin(!isLogin);\n    };\n\n    const submitHandler = (values) => {\n        setIsLoading(true);\n        let query = {\n            query: `\n              query Login($email: String!, $password: String!) {\n                login(email: $email, password: $password) {\n                  userId\n                  token\n                  tokenExpiration\n                }\n              }\n            `,\n            variables: {\n                email: values.email,\n                password: values.password\n            }\n        };\n        if (isLogin) {\n            query = {\n                query: `\n            mutation CreateUser($email: String!, $password: String!, $name: String!, $surname: String!) {\n              createUser(userInput: {email: $email, password: $password, name: $name, surname: $surname}) {\n                _id\n                email\n              }\n            }\n          `,\n                variables: {\n                    email: values.email,\n                    password: values.password,\n                    name: values.firstName,\n                    surname: values.lastName\n                }\n            };\n        }\n\n        fetch('/graphql', {\n            method: 'POST',\n            body: JSON.stringify(query),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                if (!res.ok) {\n                    setIsLoading(false);\n                    throw (res.statusText);\n                }\n                return res.json();\n            })\n            .then(res => {\n                setIsLoading(false);\n                if (res.data.login) {\n                    login(\n                        res.data.login.token,\n                        res.data.login.userId,\n                        res.data.login.tokenExpiration,\n\n                    );\n                } else {\n                    modalInfo(true, 'Confirmation','Your account was created. Now You can sign in.');\n                    switchModeHandler();\n                }\n            })\n            .catch(err => {\n                setIsLoading(false);\n                modalInfo(true, 'Oops!',`Your email or password is incorect.`);\n                throw err;\n            });\n    };\n\n\n\n    return (\n        <ModalContext.Provider value = {{modalHeader,modalText, showModal, setShowModal}}>\n        <AuthContext.Provider value={{ submitHandler, switchModeHandler }}>\n            <InfoModal />\n            {\n                isLoading ? <Spinner /> :\n                    <Fragment>\n                        {\n                            isLogin ? <SignUp /> : <SignIn />\n                        }\n                    </Fragment>\n            }\n\n        </AuthContext.Provider>\n        </ModalContext.Provider>\n    );\n};\n\nexport default AuthPage;","import React from 'react';\n\nimport './BookingList.css';\n\nconst bookingList = props => (\n  <ul className=\"bookings__list\">\n    {props.bookings.map(booking => {\n      return (\n        <li key={booking._id} className=\"bookings__item\">\n          <div className=\"bookings__item-data\">\n            {booking.event.title} -{' '}\n            {new Date(booking.createdAt).toLocaleDateString()}\n          </div>\n          <div className=\"bookings__item-actions\">\n            <button className=\"btn\" onClick={props.onDelete.bind(this, booking._id)}>Cancel</button>\n          </div>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport default bookingList;\n","import React from 'react';\nimport { Bar as BarChart } from 'react-chartjs';\n\nconst BOOKINGS_BUCKETS = {\n  Cheap: {\n    min: 0,\n    max: 100\n  },\n  Normal: {\n    min: 100,\n    max: 200\n  },\n  Expensive: {\n    min: 200,\n    max: 10000000\n  }\n};\n\nconst bookingsChart = props => {\n  const chartData = { labels: [], datasets: [] };\n  let values = [];\n  for (const bucket in BOOKINGS_BUCKETS) {\n    const filteredBookingsCount = props.bookings.reduce((prev, current) => {\n      if (\n        current.event.price > BOOKINGS_BUCKETS[bucket].min &&\n        current.event.price < BOOKINGS_BUCKETS[bucket].max\n      ) {\n        return prev + 1;\n      } else {\n        return prev;\n      }\n    }, 0);\n    values.push(filteredBookingsCount);\n    chartData.labels.push(bucket);\n    chartData.datasets.push({\n      // label: \"My First dataset\",\n      fillColor: 'rgba(220,220,220,0.5)',\n      strokeColor: 'rgba(220,220,220,0.8)',\n      highlightFill: 'rgba(220,220,220,0.75)',\n      highlightStroke: 'rgba(220,220,220,1)',\n      data: values\n    });\n    values = [...values];\n    values[values.length - 1] = 0;\n  }\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <BarChart data={chartData} />\n    </div>\n  );\n};\n\nexport default bookingsChart;\n","import React from 'react';\n\nimport './BookingsControls.css';\n\nconst bookingsControl = props => {\n  return (\n    <div className=\"bookings-control\">\n      <button\n        className={props.activeOutputType === 'list' ? 'active' : ''}\n        onClick={props.onChange.bind(this, 'list')}\n      >\n        List\n      </button>\n      <button\n        className={props.activeOutputType === 'chart' ? 'active' : ''}\n        onClick={props.onChange.bind(this, 'chart')}\n      >\n        Chart\n      </button>\n    </div>\n  );\n};\n\nexport default bookingsControl;\n","import React, { Component } from 'react';\n\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport BookingList from '../components/Bookings/BookingList/BookingList';\nimport BookingsChart from '../components/Bookings/BookingsChart/BookingsChart';\nimport BookingsControls from '../components/Bookings/BookingsControls/BookingsControls';\n\nclass BookingsPage extends Component {\n  state = {\n    isLoading: false,\n    bookings: [],\n    outputType: 'list'\n  };\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    this.fetchBookings();\n  }\n\n  fetchBookings = () => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            bookings {\n              _id\n             createdAt\n             event {\n               _id\n               title\n               date\n               price\n             }\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const bookings = resData.data.bookings;\n        this.setState({ bookings: bookings, isLoading: false });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  deleteBookingHandler = bookingId => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          mutation CancelBooking($id: ID!) {\n            cancelBooking(bookingId: $id) {\n            _id\n             title\n            }\n          }\n        `,\n      variables: {\n        id: bookingId\n      }\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState(prevState => {\n          const updatedBookings = prevState.bookings.filter(booking => {\n            return booking._id !== bookingId;\n          });\n          return { bookings: updatedBookings, isLoading: false };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  changeOutputTypeHandler = outputType => {\n    if (outputType === 'list') {\n      this.setState({ outputType: 'list' });\n    } else {\n      this.setState({ outputType: 'chart' });\n    }\n  };\n\n  render() {\n    let content = <Spinner />;\n    if (!this.state.isLoading) {\n      content = (\n        <React.Fragment>\n          <BookingsControls\n            activeOutputType={this.state.outputType}\n            onChange={this.changeOutputTypeHandler}\n          />\n          <div>\n            {this.state.outputType === 'list' ? (\n              <BookingList\n                bookings={this.state.bookings}\n                onDelete={this.deleteBookingHandler}\n              />\n            ) : (\n              <BookingsChart bookings={this.state.bookings} />\n            )}\n          </div>\n        </React.Fragment>\n      );\n    }\n    return <React.Fragment>{content}</React.Fragment>;\n  }\n}\n\nexport default BookingsPage;\n","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = () => <div className=\"backdrop\"></div>;\n\nexport default backdrop;","import React from 'react';\n\nimport './EventItem.css';\n\nconst eventItem = props => (\n  <li key={props.eventId} className=\"events__list-item\">\n    <div>\n      <h1>{props.title}</h1>\n      <h2>\n        ${props.price} - {new Date(props.date).toLocaleDateString()}\n      </h2>\n    </div>\n    <div>\n      {props.userId === props.creatorId ? (\n        <p>Your the owner of this event.</p>\n      ) : (\n        <button className=\"btn\" onClick={props.onDetail.bind(this, props.eventId)}>\n          View Details\n        </button>\n      )}\n    </div>\n  </li>\n);\n\nexport default eventItem;\n","import React from 'react';\n\nimport EventItem from './EventItem/EventItem';\nimport './EventList.css';\n\nconst eventList = props => {\n  const events = props.events.map(event => {\n    return (\n      <EventItem\n        key={event._id}\n        eventId={event._id}\n        title={event.title}\n        price={event.price}\n        date={event.date}\n        userId={props.authUserId}\n        creatorId={event.creator._id}\n        onDetail={props.onViewDetail}\n      />\n    );\n  });\n\n  return <ul className=\"event__list\">{events}</ul>;\n};\n\nexport default eventList;\n","import React, { Component } from 'react';\n\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport EventList from '../components/Events/EventList/EventList';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\nimport './Events.css';\n\nclass EventsPage extends Component {\n  state = {\n    creating: false,\n    events: [],\n    isLoading: false,\n    selectedEvent: null\n  };\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleElRef = React.createRef();\n    this.priceElRef = React.createRef();\n    this.dateElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  startCreateEventHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modalConfirmHandler = () => {\n    this.setState({ creating: false });\n    const title = this.titleElRef.current.value;\n    const price = +this.priceElRef.current.value;\n    const date = this.dateElRef.current.value;\n    const description = this.descriptionElRef.current.value;\n\n    if (\n      title.trim().length === 0 ||\n      price <= 0 ||\n      date.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n      return;\n    }\n\n    const event = { title, price, date, description };\n    console.log(event);\n\n    const requestBody = {\n      query: `\n          mutation CreateEvent($title: String!, $desc: String!, $price: Float!, $date: String!) {\n            createEvent(eventInput: {title: $title, description: $desc, price: $price, date: $date}) {\n              _id\n              title\n              description\n              date\n              price\n            }\n          }\n        `,\n        variables: {\n          title: title,\n          desc: description,\n          price: price,\n          date: date\n        }\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState(prevState => {\n          const updatedEvents = [...prevState.events];\n          updatedEvents.push({\n            _id: resData.data.createEvent._id,\n            title: resData.data.createEvent.title,\n            description: resData.data.createEvent.description,\n            date: resData.data.createEvent.date,\n            price: resData.data.createEvent.price,\n            creator: {\n              _id: this.context.userId\n            }\n          });\n          return { events: updatedEvents };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  modalCancelHandler = () => {\n    this.setState({ creating: false, selectedEvent: null });\n  };\n\n  fetchEvents() {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            events {\n              _id\n              title\n              description\n              date\n              price\n              creator {\n                _id\n                email\n              }\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        const events = resData.data.events;\n        if (this.isActive) {\n          this.setState({ events: events, isLoading: false });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) {\n          this.setState({ isLoading: false });\n        }\n      });\n  }\n\n  showDetailHandler = eventId => {\n    this.setState(prevState => {\n      const selectedEvent = prevState.events.find(e => e._id === eventId);\n      return { selectedEvent: selectedEvent };\n    });\n  };\n\n  bookEventHandler = () => {\n    if (!this.context.token) {\n      this.setState({ selectedEvent: null });\n      return;\n    }\n    console.log(this.state.selectedEvent)\n    const requestBody = {\n      query: `\n          mutation BookEvent($id: ID!) {\n            bookEvent(eventId: $id) {\n              _id\n             createdAt\n             updatedAt\n            }\n          }\n        `,\n        variables: {\n          id: this.state.selectedEvent._id\n        }\n    };\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState({ selectedEvent: null });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\n        {this.state.creating && (\n          <Modal\n            title=\"Add Event\"\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.modalConfirmHandler}\n            confirmText=\"Confirm\"\n          >\n            <form>\n              <div className=\"form-control\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"price\">Price</label>\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                  id=\"description\"\n                  rows=\"4\"\n                  ref={this.descriptionElRef}\n                />\n              </div>\n            </form>\n          </Modal>\n        )}\n        {this.state.selectedEvent && (\n          <Modal\n            title={this.state.selectedEvent.title}\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.bookEventHandler}\n            confirmText={this.context.token ? 'Book' : 'Confirm'}\n          >\n            <h1>{this.state.selectedEvent.title}</h1>\n            <h2>\n              ${this.state.selectedEvent.price} -{' '}\n              {new Date(this.state.selectedEvent.date).toLocaleDateString()}\n            </h2>\n            <p>{this.state.selectedEvent.description}</p>\n          </Modal>\n        )}\n        {this.context.token && (\n          <div className=\"events-control\">\n            <p>Share your own Events!</p>\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\n              Create Event\n            </button>\n          </div>\n        )}\n        {this.state.isLoading ? (\n          <Spinner />\n        ) : (\n          <EventList\n            events={this.state.events}\n            authUserId={this.context.userId}\n            onViewDetail={this.showDetailHandler}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EventsPage;\n","import React from 'react';\n\nconst TestContext = React.createContext();\n\nexport { TestContext as default };","import React, { useState, useContext } from 'react';\nimport TestContext from '../../context/test-context';\n\nconst OneTest = () => {\n\n    const { count, fruit, dataFromDb } = useContext(TestContext);\n\n    let [name, setName] = useState('Baravykas');\n    return (\n        <div>\n            <p>Your name is {name} {count} {dataFromDb.lenght}</p>\n            <button className=\"btn\" onClick={() => setName(name = 'Johan')}>\n                Johan\n            </button>\n            <button className=\"btn\" onClick={() => setName(name = 'Perter')}>\n                Peter\n            </button>\n            <button className=\"btn\" onClick={() => setName((name = fruit))}>\n                Putin\n            </button>\n        </div>\n    );\n};\n\nexport { OneTest as default };","\nimport React, { useState, useEffect, Fragment } from 'react';\nimport OneTest from '../components/OneTest/OneTest';\nimport TwoTest from '../components/OneTest/TwoTest';\nimport TestContext from '../context/test-context';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nconst Example = () => {\n\n\n    const myQuery = gql`query {\n        allFiles {\n            _id\n            title\n            description\n          }\n      }`;\n\n    let [show, setshow] = useState(false);\n\n    let showChnge = () => {\n        setshow(show = <div>\n            <h1>----------------------</h1>\n            <Query query={myQuery}>\n                {\n                    ({ loading, err, data }) => {\n                        if (loading) return <h1>Loading</h1>;\n                        if (err) return <h1>{err}</h1>;\n                        if (data) {\n                            { setFruit((fruit = fruitPicker())) }\n                            return (<Fragment >{\n                                data.allFiles.map(e => (\n                                    <div key={e._id}>{e._id}</div>\n                                    \n                                ))\n                            }</Fragment>);\n                        }\n\n                    }\n                }\n            </Query>\n            <h1>----------------------</h1>\n        </div>);\n    };\n    // Declare a new state variable, which we'll call \"count\"\n    let [count, setCount] = useState(0);\n    let [fruit, setFruit] = useState('Fakama');\n    let [dataFromDb, setdataFromDb] = useState([]);\n\n    const fruitPicker = () => {\n        let frutList = ['Banana', 'Abricot', 'Apple', 'Kiwi'];\n        let frutituti = frutList[Math.floor(Math.random() * frutList.length)];\n        return frutituti;\n    };\n\n    const tesFunction = value => {\n        console.log(value);\n    };\n\n    useEffect(() => {\n        document.title = `You clicked ${count} times`;\n        tesFunction(fruit);\n    }, [fruit]);\n\n    const clearMagick = () => {\n        setdataFromDb (dataFromDb = []);\n    };\n\n    const makemagick = () => {\n        const requestBody = {\n            query: `\n              query {\n                allFiles {\n                    _id\n                    title\n                    description\n                  }\n              }\n            `\n        };\n    \n        fetch('/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData => {\n                setdataFromDb (dataFromDb=resData.data.allFiles);\n                console.log(dataFromDb);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    return (\n        <TestContext.Provider value={{ count, fruit, dataFromDb }}>\n            <OneTest />\n            {show}\n            <button onClick={() => { showChnge(); }}>Show?</button>\n            {/* <Query query={myQuery}>\n                {\n                    ({ loading, err, data }) => {\n                        if (loading) return <h1>Loading</h1>;\n                        if (err) console.log(err);\n                        if (data) {\n                            return (<Fragment>{\n\n                                data.allFiles.map(e => (\n                                    <div key={e._id}>{e._id}</div>\n                                    \n                                ))\n                            }</Fragment>);\n                        }\n\n                    }\n                }\n            </Query> */}\n            <button className=\"btn btn-primary btn-sm mr-2\" onClick={() => makemagick()}>\n                Get Files from db!\n            </button>\n            <button disabled={!dataFromDb.length} className=\"btn btn-primary btn-sm\" onClick={() => clearMagick()}>\n                Clear from screen\n            </button>\n            <Fragment>\n                <div>\n                There is {dataFromDb.length} in db!\n                </div>\n                {\n                    \n                    dataFromDb.map(e => (\n                        <div key={e._id}>{e._id}</div>\n                    ))\n                }\n            </Fragment>\n            <p>You clicked {count} times</p>\n            <button className=\"btn btn-primary btn-sm\" onClick={() => setCount(count + 1)}>\n                Click me +1\n            </button>\n            <button className=\"btn btn-primary btn-sm\" onClick={() => setCount(count - 1)}>\n                Click me -1\n            </button>\n            <button className=\"btn btn-primary btn-sm\" onClick={() => setCount((count = 0))}>\n                reset\n            </button>\n            <div>\n                <p>You faforite fruit is {fruit} </p>\n                <button\n                    className=\"btn btn-primary btn-sm\"\n                    onClick={() => setFruit((fruit = fruitPicker()))}\n                >\n                    pick fruit\n                </button>\n            </div>\n        </TestContext.Provider>\n    );\n};\n\nexport { Example as default };\n","const expensesReducer = (state, action) => {\n    switch (action.type) {\n    case 'POPULATE_ EXPENSES':\n        return action.expenses;\n    case 'ADD_EXPENSE':\n        return [\n            ...state,\n            { title: action.title, body: action.body }\n        ];\n    case 'REMOVE_EXPENSE':\n        return state.filter((expense) => expense.title !== action.title);\n    default:\n        return state;\n    }\n};\n\nexport { expensesReducer as default };","import React from 'react';\n\nconst expensesContext = React.createContext();\n\nexport { expensesContext as default };","import React, { useContext } from 'react';\nimport ExpensesContext from '../../../../context/expenses-context';\nimport './Expense.css';\n\nconst Expense = ({ expense }) => {\n    const { dispatch } = useContext(ExpensesContext);\n\n    return (\n        <div className = 'events_list-item'>\n            <h1>{expense.title}</h1>\n            <h2>{expense.body}</h2>\n            <button className= 'btn' onClick={() => dispatch({ type: 'REMOVE_EXPENSE', title: expense.title })}>x</button>\n        </div>\n    );\n};\n\nexport { Expense as default };","import React, { useContext } from 'react';\nimport Expense from './Expense/Expense';\nimport ExpensesContext from '../../../context/expenses-context';\nimport './ExpensesList.css';\n\nconst Expenselist = () => {\n    const { expenses } = useContext(ExpensesContext);\n\n    return expenses.map((expense) => (\n        <Expense className = 'expenses_list' key={expense.title} expense={expense} />\n    ));\n};\n\nexport { Expenselist as default };","import React, { useState, useContext } from 'react';\n// import Modal2 from '../../Modal/Modal2';\nimport ExpensesContext from '../../../context/expenses-context';\nimport Backdrop from '../../Backdrop/Backdrop';\n\nconst AddExpenseForm = () => {\n    const { dispatch } = useContext(ExpensesContext);\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    let [startAdd, setStartAdd] = useState(false);\n\n    const cancelButton = () => {\n        return setStartAdd(startAdd = !startAdd);\n    };\n\n    const addExpense = (e) => {\n        e.preventDefault();\n        dispatch({\n            type: 'ADD_EXPENSE',\n            title,\n            body\n        });\n        setTitle('');\n        setBody('');\n    };\n\n    return (\n        <div>\n            this is {startAdd}\n            <button className='btn' onClick={() => setStartAdd(startAdd = !startAdd)}>add expense2</button>\n            {startAdd && (\n                <ExpensesContext.Provider value={{ startAdd, cancelButton }}>\n                    <Backdrop />\n                    <form onSubmit={addExpense}>\n                        {/* <Modal2 /> */}\n                        <input value={title} onChange={(e) => setTitle(e.target.value)} />\n                        <textarea value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n                        <button className='btn'>add expense</button>\n                    </form>\n                </ExpensesContext.Provider>\n            )}\n        </div>\n    );\n};\n\nexport { AddExpenseForm as default };","\nimport React, { useEffect, useReducer } from 'react';\nimport expensesReducer from '../reducers/expenses';\nimport ExpensesContext from '../context/expenses-context';\nimport ExpenseList from '../components/Expenses/ExpensesList/ExpensesList';\nimport AddExpense from '../components/Expenses/AddExpense/AddExpense';\n\n\nconst Expenses = () => {\n\n    const [expenses, dispatch] = useReducer(expensesReducer, []);\n\n    useEffect(() => {\n        const expenses = JSON.parse(localStorage.getItem('expenses'));\n\n        if (expenses) {\n            dispatch({ type: 'POPULATE_EXPENSES', expenses });\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('expenses', JSON.stringify(expenses));\n    }, [expenses]);\n\n\n    return (\n        <ExpensesContext.Provider value={{ expenses, dispatch }}>\n            <h1>Expenses</h1>\n            <AddExpense />\n            <ExpenseList/>\n        </ExpensesContext.Provider>\n    );\n};\n\nexport { Expenses as default };\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\nconst mainNavigation = () => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>Budget planner</h1>\n          </div>\n          <nav className=\"main-navigation__items\">\n            <ul>\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/auth\">Authenticate</NavLink>\n                </li>\n              )}\n              <li>\n                <NavLink to=\"/events\">Events</NavLink>\n              </li>\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/bookings\">Bookings</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React, { Component,Fragment } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\nimport AuthPage from './pages/Auth';\nimport BookingsPage from './pages/Bookings';\nimport EventsPage from './pages/Events';\nimport TestPage from './pages/Test';\nimport expenses from './pages/Expenses';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\n\nimport './App.css';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null\n  };\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n  };\n\n  render() {\n    return (\n      <ApolloProvider client={client}>\n      <BrowserRouter>\n        <Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                <Route path=\"/test\" component={TestPage} />\n                <Route path=\"/expenses\" component={expenses} />\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\n                {this.state.token && (\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\n                )}\n                {!this.state.token && (\n                  <Route path=\"/auth\" component={AuthPage} />\n                )}\n                <Route path=\"/events\" component={EventsPage} />\n                {this.state.token && (\n                  <Route path=\"/bookings\" component={BookingsPage} />\n                )}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </Fragment>\n      </BrowserRouter>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}